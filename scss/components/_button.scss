/// Buttons base styles
@use "sass:map" as map;
@use "sass:string" as *;
@use "../variables" as *;
@use "../abstracts/mixins" as *;

// region button-base

%button-base {
  --height: var(--#{$prefix}-btn-height);
  --padding: #{map.get($spacers, 2)} #{map.get($spacers, 4)};
  --inner-gap: 0.5rem;
  --font-weight: 500;
  --line-height: 1.25rem;
  --border-radius: var(--#{$prefix}-border-radius);
  --font-family: var(--#{$prefix}-font-family);
  --font-size: var(--#{$prefix}-btn-font-size);
  --container-color: var(--#{$prefix}-surface-container);
  --background-color: var(--container-color);
  --border-color: var(--background-color);
  --color: var(--#{$prefix}-on-surface-container);
  --opacity: 1;
  --elevation: none;

  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--inner-gap);
  height: var(--height);
  padding: var(--padding);
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
  font-family: var(--font-family), serif;
  font-size: var(--font-size);
  font-weight: var(--font-weight);
  line-height: var(--line-height);
  white-space: nowrap;
  text-decoration: none;
  background-color: var(--background-color);
  background-repeat: no-repeat;
  color: var(--color);
  opacity: var(--opacity);
  box-shadow: var(--elevation);

  &:is(:hover, [data-hovered]) {
    --background-color: color-mix(in lab, var(--container-color) 92%, var(--#{$prefix}-base));
    --elevation: var(--#{$prefix}-elevation-1);
  }

  &:is(:focus, [data-focused]) {
    --background-color: color-mix(in lab, var(--container-color) 86%, var(--#{$prefix}-base));
  }

  &:is(:active, [data-pressed]) {
    --background-color: color-mix(in lab, var(--container-color) 80%, var(--#{$prefix}-base));
  }
}

%button-disabled {
  @include disabled {
    --background-color: color-mix(in srgb, var(--#{$prefix}-on-surface) 12%, transparent) !important;
    --color: color-mix(in srgb, var(--#{$prefix}-on-surface) 38%, transparent) !important;
    --border-color: var(--background-color) !important;
    --elevation: var(--#{$prefix}-elevation-0) !important;

    cursor: auto !important;
  }
}

%button-inner-icon {
  :is(i, img, svg) {
    display: inline-flex;
    width: var(--#{$prefix}-btn-inner-icon-size);
    height: var(--#{$prefix}-btn-inner-icon-size);
    line-height: inherit;
  }

  svg {
    path:not([stroke]) {
      stroke: var(--color);
    }
  }
}

// endregion button-base

%button-filled {
  --container-color: var(--#{$prefix}-primary);
  --color: var(--#{$prefix}-on-primary);
}

%button-elevated {
  --color: var(--#{$prefix}-primary);
  --container-color: var(--#{$prefix}-surface-container-low);
  --elevation: var(--#{$prefix}-elevation-1);

  &:is(:hover, [data-hovered]) {
    --elevation: var(--#{$prefix}-elevation-2);
  }

  &:is(:focus, [data-focused], :active, [data-pressed]) {
    --elevation: var(--#{$prefix}-elevation-1);
  }
}

%button-tonal {
  --color: var(--#{$prefix}-on-secondary-container);
  --container-color: var(--#{$prefix}-secondary-container);
}

%button-outlined {
  --color: var(--#{$prefix}-primary);
  --container-color: transparent;
  --border-color: var(--#{$prefix}-outline);
}

%button-icon {
  --size: calc(var(--#{$prefix}-btn-height) * 1.2);
  --color: var(--#{$prefix}-on-surface-variant);
  --container-color: transparent;
  --border-radius: var(--size);
  --elevation: none;
  --icon-size: var(--#{$prefix}-btn-icon-size);

  height: var(--size);
  width: var(--size);
  padding: 0;
  background-position: center;
  background-size: var(--#{$prefix}-btn-icon-size);

  &:is(:hover, [data-hovered]) {
    --elevation: none;
    --container-color: rgb(from var(--#{$prefix}-on-surface-variant) r g b / 10%);
  }

  &:is(:active, [data-pressed]) {
    --container-color: rgb(from var(--#{$prefix}-on-surface-variant) r g b / 20%);
  }

  :is(i, img, svg) {
    width: var(--icon-size);
    height: var(--icon-size);
  }
}

%button-text {
  --color: var(--#{$prefix}-primary);
  --container-color: transparent;

  &:not([disabled="false"]):is(:disabled, [disabled], [aria-disabled="true"]) {
    --background-color: transparent;
  }

  &:is(:hover, [data-hovered], :focus, [data-focused], :active, [data-pressed]) {
    --elevation: var(--#{$prefix}-elevation-0);
  }
}

%button-fab {
  --height: 3.5rem;
  --border-radius: 1rem;
  --container-color: var(--#{$prefix}-primary-container);
  --color: var(--#{$prefix}-on-primary-container);
  --padding: 0;

  min-width: var(--height);

  &:is(:hover, [data-hovered]) {
    --elevation: var(--#{$prefix}-elevation-4);
  }

  &:is(:focus, [data-focused], :active, [data-pressed]) {
    --elevation: var(--#{$prefix}-elevation-3);
  }
}

/////////////////////////////////////////////////
// Apply buttons styles
/////////////////////////////////////////////////

@mixin md-buttons {
  :is(button, [type="submit"], [type="reset"], [type="button"], [role="button"]) {
    // Set base styles
    @extend %button-base;
    @extend %button-filled;
    @extend %button-inner-icon;
    @extend %button-disabled;

    -webkit-appearance: button;

    // Set elevated button styles
    &.btn-elevated {
      @extend %button-elevated;
    }

    // Set tonal button styles
    &.btn-tonal {
      @extend %button-tonal;
    }

    // Set outlined button styles
    &.btn-outlined {
      @extend %button-outlined;
    }

    // Set button-text styles
    &.btn-text {
      @extend %button-text;
    }

    // Set button-fab styles
    &.btn-fab {
      @extend %button-fab;
      @extend %button-inner-icon;
    }

    // Set button-icon styles
    &.btn-icon {
      @extend %button-base;
      @extend %button-icon;
    }
  }

  [type="file"]::file-selector-button {
    @extend %button-base;
    @extend %button-filled;

    --container-color: var(--#{$prefix}-tertiary);
  }
}

@include md-buttons;
