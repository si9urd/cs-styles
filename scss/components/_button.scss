/// Buttons base styles
@use "sass:map" as *;
@use "sass:string" as *;
@use "../variables" as *;

// region button-base

%button-base {
  --btn-height: var(--#{$prefix}-btn-height);
  --btn-padding: #{map-get($spacers, 2)} #{map-get($spacers, 4)};
  --btn-inner-gap: 0.5rem;
  --btn-font-weight: 500;
  --btn-line-height: 1.25rem;
  --btn-border-radius: var(--#{$prefix}-border-radius);
  --btn-font-family: var(--#{$prefix}-font-family);
  --btn-font-size: var(--#{$prefix}-btn-font-size);
  --btn-container-color: var(--#{$prefix}-surface-container);
  --btn-background-color: var(--btn-container-color);
  --btn-border-color: var(--btn-background-color);
  --btn-color: var(--#{$prefix}-on-surface-container);
  --btn-opacity: 1;
  --btn-elevation: none;

  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--btn-inner-gap);
  height: var(--btn-height);
  padding: var(--btn-padding);
  border: 1px solid var(--btn-border-color);
  border-radius: var(--btn-border-radius);
  font-family: var(--btn-font-family), serif;
  font-size: var(--btn-font-size);
  font-weight: var(--btn-font-weight);
  line-height: var(--btn-line-height);
  white-space: nowrap;
  text-decoration: none;
  background-color: var(--btn-background-color);
  background-repeat: no-repeat;
  color: var(--btn-color);
  opacity: var(--btn-opacity);
  box-shadow: var(--btn-elevation);

  &:not(:disabled, [disabled="true"], [aria-disabled="true"]) {
    &::after {
      content: "";
      position: absolute;
      inset: 0;
      border-radius: inherit;
      background-color: var(--btn-layer-color);
      opacity: var(--btn-layer-opacity);
      z-index: 0;
    }

    &:is(:hover, [data-hovered]) {
      --btn-background-color: color-mix(in lab, var(--btn-container-color) 92%, var(--#{$prefix}-base));
      --btn-elevation: var(--#{$prefix}-elevation-1);
    }

    &:is(:focus, [data-focused]) {
      --btn-background-color: color-mix(in lab, var(--btn-container-color) 86%, var(--#{$prefix}-base));
    }

    &:is(:active, &[data-pressed]) {
      --btn-background-color: color-mix(in lab, var(--btn-container-color) 80%, var(--#{$prefix}-base));
    }
  }
}

%button-inner-icon {
  :is(i, img, svg) {
    display: inline-flex;
    width: var(--#{$prefix}-btn-inner-icon-size);
    height: var(--#{$prefix}-btn-inner-icon-size);
    line-height: inherit;
  }

  svg {
    path:not([stroke]) {
      stroke: var(--btn-color);
    }
  }
}

%button-disabled {
  &:is(:disabled, [disabled="true"], [aria-disabled="true"]) {
    --btn-background-color: color-mix(in srgb, var(--#{$prefix}-on-surface) 12%, transparent) !important;
    --btn-color: color-mix(in srgb, var(--#{$prefix}-on-surface) 38%, transparent) !important;
    --btn-border-color: var(--btn-background-color) !important;
    --btn-elevation: var(--#{$prefix}-elevation-0) !important;

    cursor: auto !important;
  }
}

// endregion button-base


%button-filled {
  --btn-container-color: var(--#{$prefix}-primary);
  --btn-color: var(--#{$prefix}-on-primary);
}

%button-elevated {
  --btn-color: var(--#{$prefix}-primary);
  --btn-container-color: var(--#{$prefix}-surface-container-low);
  --btn-elevation: var(--#{$prefix}-elevation-1);

  &:not(:disabled, [disabled="true"], [aria-disabled="true"]) {
    &:is(:hover, [data-hovered]) {
      --btn-elevation: var(--#{$prefix}-elevation-2);
    }

    &:is(:focus, [data-focused]) {
      --btn-elevation: var(--#{$prefix}-elevation-1);
    }

    &:is(:active, &[data-pressed]) {
      --btn-elevation: var(--#{$prefix}-elevation-1);
    }
  }
}

%button-tonal {
  --btn-color: var(--#{$prefix}-on-secondary-container);
  --btn-container-color: var(--#{$prefix}-secondary-container);
}

%button-outlined {
  --btn-color: var(--#{$prefix}-primary);
  --btn-container-color: transparent;
  --btn-border-color: var(--#{$prefix}-outline);
}

%button-icon {
  --btn-icon-size: calc(var(--#{$prefix}-btn-height) * 1.2);
  --btn-color: var(--#{$prefix}-on-surface-variant);
  --btn-container-color: transparent;
  --btn-border-radius: var(--btn-icon-size);
  --btn-elevation: none;

  height: var(--btn-icon-size);
  width: var(--btn-icon-size);
  padding: 0;
  background-position: center;
  background-size: var(--#{$prefix}-btn-icon-size);
  cursor: pointer;

  &:hover {
    --btn-elevation: none;
    --btn-container-color: rgb(from var(--#{$prefix}-on-surface-variant) r g b / 10%);
  }

  &:active {
    --btn-container-color: rgb(from var(--#{$prefix}-on-surface-variant) r g b / 20%);
  }
}

%button-text {
  --btn-color: var(--#{$prefix}-primary);
  --btn-container-color: transparent;

  cursor: pointer;

  &:is(:disabled, [disabled="true"], [aria-disabled="true"]) {
    --btn-background-color: transparent !important;
  }

  &:is(:hover, [data-hovered]) {
    --btn-elevation: var(--#{$prefix}-elevation-0) !important;
  }

  &:is(:focus, [data-focused]) {
    --btn-elevation: var(--#{$prefix}-elevation-0) !important;
  }

  &:is(:active, &[data-pressed]) {
    --btn-elevation: var(--#{$prefix}-elevation-0) !important;
  }

  &:is(:active, &[data-pressed]) {
    --btn-elevation: var(--#{$prefix}-elevation-0) !important;
  }
}

%button-fab {
  --btn-height: 3.5rem;
  --btn-border-radius: 1rem;
  --btn-container-color: var(--#{$prefix}-primary-container);
  --btn-color: var(--#{$prefix}-on-primary-container);

  &:not(:disabled, [disabled="true"], [aria-disabled="true"]) {
    &:is(:hover, [data-hovered]) {
      --btn-elevation: var(--#{$prefix}-elevation-4) !important;
    }

    &:is(:focus, [data-focused]) {
      --btn-elevation: var(--#{$prefix}-elevation-3) !important;
    }

    &:is(:active, &[data-pressed]) {
      --btn-elevation: var(--#{$prefix}-elevation-3) !important;
    }

    &:is(:active, &[data-pressed]) {
      --btn-elevation: var(--#{$prefix}-elevation-3) !important;
    }
  }

  min-width: var(--btn-height);
  padding: 0;
}

/////////////////////////////////////////////////
// Apply buttons styles
/////////////////////////////////////////////////

@mixin md-buttons {
  // Set base styles
  :is(button, [type="submit"], [type="reset"], [type="button"], [role="button"]) {
    @extend %button-base;
    @extend %button-filled;
    @extend %button-inner-icon;
    @extend %button-disabled;

    -webkit-appearance: button;
  }

  [type="file"]::file-selector-button {
    @extend %button-base;
    @extend %button-filled;

    --btn-background-color: var(--#{$prefix}-tertiary);
  }

  // Set elevated button styles
  :is(button, [type="submit"], [type="reset"], [type="button"], [role="button"]).btn-elevated {
    @extend %button-elevated;
  }

  // Set tonal button styles
  :is(button, [type="submit"], [type="reset"], [type="button"], [role="button"]).btn-tonal {
    @extend %button-tonal;
  }

  // Set outlined button styles
  :is(button, [type="submit"], [type="reset"], [type="button"], [role="button"]).btn-outlined {
    @extend %button-outlined;
  }

  // Set button-text styles
  :is(button, [type="submit"], [type="reset"], [type="button"], [role="button"]).btn-text {
    @extend %button-text;
  }

  // Set button-fab styles
  :is(button, [type="submit"], [type="reset"], [type="button"], [role="button"]).btn-fab {
    @extend %button-fab;
    @extend %button-inner-icon;
  }

  // Set button-icon styles
  .btn-icon {
    @extend %button-base;
    @extend %button-icon;
  }
}

@include md-buttons;
