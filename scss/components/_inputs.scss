@use "../variables" as *;

%input {
  --height: var(--#{$prefix}-input-height);
  --padding: 0 var(--#{$prefix}-spacing);
  --line-height: var(--#{$prefix}-line-height-base);
  --border-radius: var(--#{$prefix}-border-radius);
  --border-color: var(--#{$prefix}-outline-variant);
  --font-size: var(--#{$prefix}-font-size-input);
  --background: var(--#{$prefix}-surface-container-lowest);
  --background-size: var(--#{$prefix}-btn-inner-icon-size);
  --color: var(--#{$prefix}-on-surface);
  --placeholder-color: var(--#{$prefix}-on-surface-variant);
  --box-shadow: none;
  --transition: var(--#{$prefix}-transition);

  display: inline-flex;
  width: 100%;
  padding: var(--padding);
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
  font-size: var(--font-size);
  height: var(--height);
  line-height: var(--line-height);
  color: var(--color);
  background-color: var(--background);
  box-shadow: var(--box-shadow);
  transition: background-color var(--transition),
              border-color var(--transition),
              color var(--transition),
              box-shadow var(--transition);
  outline: none !important;
  background-repeat: no-repeat;
  background-size: var(--background-size);
  background-position: right var(--#{$prefix}-spacing) top calc((var(--#{$prefix}-input-height) - var(--background-size)) / 2);

  &:disabled {
    --background: var(--#{$prefix}-surface-container);
    --color: var(--#{$prefix}-on-surface-variant);

    &::placeholder {
      --color: var(--#{$prefix}-on-surface-variant);
    }
  }

  &:is([type="date"], [type="datetime-local"], [type="month"], [type="time"], [type="week"]) {
    position: relative;

    &::-webkit-calendar-picker-indicator {
      position: absolute;
      right: var(--#{$prefix}-spacing);
      opacity: .5;
    }
  }

  &:focus {
    --box-shadow: 0 0 0 1px var(--#{$prefix}-primary) inset;
    --border-color: var(--#{$prefix}-primary);
  }
}

@mixin input {
  input:not(:where([type="checkbox"], [type="radio"], [type="range"], [type="file"], [type="submit"])),
  textarea,
  select {
    @extend %input;
  }

  textarea {
    --height: calc(var(--#{$prefix}-input-height) * 2) !important;

    padding-top: var(--#{$prefix}-spacing) !important;
  }

  :where(input, textarea)::placeholder {
    color: var(--placeholder-color);
  }
}

@mixin input-other {
  input[type="search"] {
    --border-radius: 999px !important;

    background-image: var(--#{$prefix}-search-icon);
    background-position: left var(--#{$prefix}-spacing) center !important;
    padding-left: calc(var(--#{$prefix}-spacing) * 3) !important;
  }

  input[type="color"] {
    --padding: calc(var(--#{$prefix}-spacing) / 2) var(--#{$prefix}-spacing) !important;
  }
}

@mixin input-states {
  :is(input, textarea, select) {
    &[aria-invalid="true"] {
      --border-color: var(--#{$prefix}-error);

      background-image: var(--#{$prefix}-invalid-icon);

      &:focus {
        --box-shadow: 0 0 0 1px var(--#{$prefix}-error) inset;
        --border-color: var(--#{$prefix}-error);
      }
    }

    &[aria-invalid="false"] {
      --border-color: var(--#{$prefix}-success);

      background-image: var(--#{$prefix}-valid-icon);

      &:focus {
        --box-shadow: 0 0 0 1px var(--#{$prefix}-success) inset;
        --border-color: var(--#{$prefix}-success);
      }
    }
  }
}

@mixin input-autofill {
  :is(input, textarea, select):is(:autofill, :-webkit-autofill) {
    box-shadow: 0 0 0 1000px var(--background) inset !important;
    -webkit-text-fill-color: var(--color) !important;
  }
}

@if $enable-forms {
  @include input;
  @include input-other;
  @include input-states;

  @if $enable-autofill-fix {
    @include input-autofill;
  }
}
