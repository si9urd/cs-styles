@use "../../../abstracts/variables" as *;
@use "../abstracts/grid-variables" as *;
@use "../abstracts/mixins/breakpoints" as *;
@use "../abstracts/mixins/container" as *;

// Container widths
//
// Set the container width, and override it for fixed navbars in media queries.
// Single container class with breakpoint max-widths

@if $enable-containers {
  .container,
    // 100% wide container at all breakpoints
  .container-fluid {
    @include make-container();
  }

  // Responsive containers that are 100% wide until a breakpoint
  @each $breakpoint, $container-max-width in $container-max-widths {
    .container-#{$breakpoint} {
      @extend .container-fluid;
    }

    @include media-breakpoint-up($breakpoint, $grid-breakpoints) {
      %responsive-container-#{$breakpoint} {
        max-width: $container-max-width;
      }

      // Extend each breakpoint which is smaller or equal to the current breakpoint
      $extend-breakpoint: true;

      @each $name, $width in $grid-breakpoints {
        @if ($extend-breakpoint) {
          .container#{breakpoint-infix($name, $grid-breakpoints)} {
            @extend %responsive-container-#{$breakpoint};
          }

          // Once the current breakpoint is reached, stop extending
          @if ($breakpoint == $name) {
            $extend-breakpoint: false;
          }
        }
      }
    }
  }
}

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9jb250YWluZXJzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiX2NvbnRhaW5lcnMuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkB1c2UgXCIuLi8uLi9hYnN0cmFjdHMvdmFyaWFibGVzXCIgYXMgKjtcclxuQHVzZSBcIi4uL2Fic3RyYWN0cy9ncmlkLXZhcmlhYmxlc1wiIGFzICo7XHJcbkB1c2UgXCIuLi9hYnN0cmFjdHMvbWl4aW5zL2JyZWFrcG9pbnRzXCIgYXMgKjtcclxuQHVzZSBcIi4uL2Fic3RyYWN0cy9taXhpbnMvY29udGFpbmVyXCIgYXMgKjtcclxuXHJcbi8vIENvbnRhaW5lciB3aWR0aHNcclxuLy9cclxuLy8gU2V0IHRoZSBjb250YWluZXIgd2lkdGgsIGFuZCBvdmVycmlkZSBpdCBmb3IgZml4ZWQgbmF2YmFycyBpbiBtZWRpYSBxdWVyaWVzLlxyXG4vLyBTaW5nbGUgY29udGFpbmVyIGNsYXNzIHdpdGggYnJlYWtwb2ludCBtYXgtd2lkdGhzXHJcblxyXG5AaWYgJGVuYWJsZS1jb250YWluZXJzIHtcclxuICAuY29udGFpbmVyLFxyXG4gICAgLy8gMTAwJSB3aWRlIGNvbnRhaW5lciBhdCBhbGwgYnJlYWtwb2ludHNcclxuICAuY29udGFpbmVyLWZsdWlkIHtcclxuICAgIEBpbmNsdWRlIG1ha2UtY29udGFpbmVyKCk7XHJcbiAgfVxyXG5cclxuICAvLyBSZXNwb25zaXZlIGNvbnRhaW5lcnMgdGhhdCBhcmUgMTAwJSB3aWRlIHVudGlsIGEgYnJlYWtwb2ludFxyXG4gIEBlYWNoICRicmVha3BvaW50LCAkY29udGFpbmVyLW1heC13aWR0aCBpbiAkY29udGFpbmVyLW1heC13aWR0aHMge1xyXG4gICAgLmNvbnRhaW5lci0jeyRicmVha3BvaW50fSB7XHJcbiAgICAgIEBleHRlbmQgLmNvbnRhaW5lci1mbHVpZDtcclxuICAgIH1cclxuXHJcbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKCRicmVha3BvaW50LCAkZ3JpZC1icmVha3BvaW50cykge1xyXG4gICAgICAlcmVzcG9uc2l2ZS1jb250YWluZXItI3skYnJlYWtwb2ludH0ge1xyXG4gICAgICAgIG1heC13aWR0aDogJGNvbnRhaW5lci1tYXgtd2lkdGg7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIEV4dGVuZCBlYWNoIGJyZWFrcG9pbnQgd2hpY2ggaXMgc21hbGxlciBvciBlcXVhbCB0byB0aGUgY3VycmVudCBicmVha3BvaW50XHJcbiAgICAgICRleHRlbmQtYnJlYWtwb2ludDogdHJ1ZTtcclxuXHJcbiAgICAgIEBlYWNoICRuYW1lLCAkd2lkdGggaW4gJGdyaWQtYnJlYWtwb2ludHMge1xyXG4gICAgICAgIEBpZiAoJGV4dGVuZC1icmVha3BvaW50KSB7XHJcbiAgICAgICAgICAuY29udGFpbmVyI3ticmVha3BvaW50LWluZml4KCRuYW1lLCAkZ3JpZC1icmVha3BvaW50cyl9IHtcclxuICAgICAgICAgICAgQGV4dGVuZCAlcmVzcG9uc2l2ZS1jb250YWluZXItI3skYnJlYWtwb2ludH07XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgLy8gT25jZSB0aGUgY3VycmVudCBicmVha3BvaW50IGlzIHJlYWNoZWQsIHN0b3AgZXh0ZW5kaW5nXHJcbiAgICAgICAgICBAaWYgKCRicmVha3BvaW50ID09ICRuYW1lKSB7XHJcbiAgICAgICAgICAgICRleHRlbmQtYnJlYWtwb2ludDogZmFsc2U7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ== */