@use "sass:map" as *;
@use "../variables" as *;

@mixin page-layout {
  #{$page-root},
  .page {
    --gutter: calc(var(--#{$prefix}-spacing) * 3);

    display: grid;
    grid-template-columns:
      [page-start col1-start]
        minmax(var(--gutter), 1fr)
      [breakout-start col1-end col2-start]
        1fr
      [content-start col2-end col3-start]
        min(100% - (var(--gutter) * 2), 1200px)
      [content-end col3-end col4-start]
        1fr
      [breakout-end col4-end col5-start]
        minmax(var(--gutter), 1fr)
      [page-end col5-end];

    & > header {
      grid-column: page;
      display: grid;
      grid-template-columns: subgrid;
      position: sticky;
      top: 0;
      z-index: $z-index-sticky;

      & > .content {
        grid-column: breakout;
        display: flex;
        flex-flow: wrap;
        justify-content: space-between;
        align-items: center;
      }

      padding: var(--#{$prefix}-spacing) 0;
      margin-bottom: var(--#{$prefix}-spacing);
      background-color: var(--#{$prefix}-surface);
      box-shadow: var(--#{$prefix}-elevation-1);

      nav {
        display: flex;
        align-items: center;

        hr {
          display: block;
          border-left: 1px solid var(--#{$prefix}-outline-variant);
          height: var(--#{$prefix}-btn-icon-size);
          width: 1px;
          margin: 0 var(--#{$prefix}-x-spacing);
          opacity: .35;
        }

        ul {
          display: flex;
          align-items: center;
          margin: 0;
          padding: 0;

          li {
            display: inline-flex;
            margin: 0;
            padding: 0 calc(0.5 * var(--#{$prefix}-x-spacing));
          }
        }
      }
    }

    & > main {
      grid-column: page;
      display: grid;
      grid-template-columns: subgrid;

      & > * {
        grid-column: content;
      }
    }

    & > footer {
      grid-column: page;
    }
  }
}

@if $enable-page-layout {
  @include page-layout;
}

