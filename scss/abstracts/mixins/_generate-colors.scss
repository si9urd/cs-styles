@use "sass:math";
@use "sass:list";
@use "sass:color" as color;
@use "../functions" as *;

@mixin color-generator($colors, $from: 10, $to: 90, $step: 10) {
  // creates a list of weights, from 10 to 90 (default)
  $weights: range($from, $to, $step);

  // get the index of the last weight
  $lastIdx: list.length($weights) - 1;

  // loops through the weights
  @for $idx from 0 through $lastIdx {
    // get the weight by index
    $weight: list.nth($weights, $idx + 1);

    // get the position of the weight on the gradient
    $pos: math.div($idx, $lastIdx);

    // pick the color
    $color: #{get-color-by-position($colors, $pos)};

    @content ($weight, $color);
  }
}

// generate color css variables
@mixin generate-color-vars($name, $colors, $from: 10, $to: 90, $step: 10) {
  @include color-generator($colors, $from, $to, $step) using($weight, $color) {
    --#{$name}-#{$weight}: #{$color};
  }
}

// generate extra color css variables
@mixin generate-extra-color-vars($name, $colors, $base-index: 4) {
  $baseColor: list.nth($colors, $base-index);

  --#{$name}-95: #{color.mix(white, $baseColor, 93.75%)};
  --#{$name}-99: #{color.mix(white, $baseColor, 99%)};
}


/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9nZW5lcmF0ZS1jb2xvcnMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiJfZ2VuZXJhdGUtY29sb3JzLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAdXNlIFwic2FzczptYXRoXCI7XHJcbkB1c2UgXCJzYXNzOmxpc3RcIjtcclxuQHVzZSBcInNhc3M6Y29sb3JcIiBhcyBjb2xvcjtcclxuQHVzZSBcIi4uL2Z1bmN0aW9uc1wiIGFzICo7XHJcblxyXG5AbWl4aW4gY29sb3ItZ2VuZXJhdG9yKCRjb2xvcnMsICRmcm9tOiAxMCwgJHRvOiA5MCwgJHN0ZXA6IDEwKSB7XHJcbiAgLy8gY3JlYXRlcyBhIGxpc3Qgb2Ygd2VpZ2h0cywgZnJvbSAxMCB0byA5MCAoZGVmYXVsdClcclxuICAkd2VpZ2h0czogcmFuZ2UoJGZyb20sICR0bywgJHN0ZXApO1xyXG5cclxuICAvLyBnZXQgdGhlIGluZGV4IG9mIHRoZSBsYXN0IHdlaWdodFxyXG4gICRsYXN0SWR4OiBsaXN0Lmxlbmd0aCgkd2VpZ2h0cykgLSAxO1xyXG5cclxuICAvLyBsb29wcyB0aHJvdWdoIHRoZSB3ZWlnaHRzXHJcbiAgQGZvciAkaWR4IGZyb20gMCB0aHJvdWdoICRsYXN0SWR4IHtcclxuICAgIC8vIGdldCB0aGUgd2VpZ2h0IGJ5IGluZGV4XHJcbiAgICAkd2VpZ2h0OiBsaXN0Lm50aCgkd2VpZ2h0cywgJGlkeCArIDEpO1xyXG5cclxuICAgIC8vIGdldCB0aGUgcG9zaXRpb24gb2YgdGhlIHdlaWdodCBvbiB0aGUgZ3JhZGllbnRcclxuICAgICRwb3M6IG1hdGguZGl2KCRpZHgsICRsYXN0SWR4KTtcclxuXHJcbiAgICAvLyBwaWNrIHRoZSBjb2xvclxyXG4gICAgJGNvbG9yOiAje2dldC1jb2xvci1ieS1wb3NpdGlvbigkY29sb3JzLCAkcG9zKX07XHJcblxyXG4gICAgQGNvbnRlbnQgKCR3ZWlnaHQsICRjb2xvcik7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBnZW5lcmF0ZSBjb2xvciBjc3MgdmFyaWFibGVzXHJcbkBtaXhpbiBnZW5lcmF0ZS1jb2xvci12YXJzKCRuYW1lLCAkY29sb3JzLCAkZnJvbTogMTAsICR0bzogOTAsICRzdGVwOiAxMCkge1xyXG4gIEBpbmNsdWRlIGNvbG9yLWdlbmVyYXRvcigkY29sb3JzLCAkZnJvbSwgJHRvLCAkc3RlcCkgdXNpbmcoJHdlaWdodCwgJGNvbG9yKSB7XHJcbiAgICAtLSN7JG5hbWV9LSN7JHdlaWdodH06ICN7JGNvbG9yfTtcclxuICB9XHJcbn1cclxuXHJcbi8vIGdlbmVyYXRlIGV4dHJhIGNvbG9yIGNzcyB2YXJpYWJsZXNcclxuQG1peGluIGdlbmVyYXRlLWV4dHJhLWNvbG9yLXZhcnMoJG5hbWUsICRjb2xvcnMsICRiYXNlLWluZGV4OiA0KSB7XHJcbiAgJGJhc2VDb2xvcjogbGlzdC5udGgoJGNvbG9ycywgJGJhc2UtaW5kZXgpO1xyXG5cclxuICAtLSN7JG5hbWV9LTk1OiAje2NvbG9yLm1peCh3aGl0ZSwgJGJhc2VDb2xvciwgOTMuNzUlKX07XHJcbiAgLS0jeyRuYW1lfS05OTogI3tjb2xvci5taXgod2hpdGUsICRiYXNlQ29sb3IsIDk5JSl9O1xyXG59XHJcblxyXG4iXX0= */